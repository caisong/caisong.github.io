<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Caisong's Blog</title><link>https://caisong.github.io/categories/linux/</link><description>Recent content in Linux on Caisong's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 01 Jan 2025 17:47:51 +0800</lastBuildDate><atom:link href="https://caisong.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>换行转换</title><link>https://caisong.github.io/posts/%E6%8D%A2%E8%A1%8C%E8%BD%AC%E6%8D%A2/</link><pubDate>Wed, 01 Jan 2025 17:47:51 +0800</pubDate><guid>https://caisong.github.io/posts/%E6%8D%A2%E8%A1%8C%E8%BD%AC%E6%8D%A2/</guid><description>&lt;p>转换windows换行符至Linux&lt;/p></description></item><item><title>Linux开机启动</title><link>https://caisong.github.io/posts/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</link><pubDate>Fri, 03 Sep 2021 21:04:38 +0800</pubDate><guid>https://caisong.github.io/posts/linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/</guid><description>&lt;ol>
&lt;li>/etc/inittab Line Syntax&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>id:rstate:action:process
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>/etc/init /etc/init.d&lt;/li>
&lt;/ol>
&lt;p>&lt;code>/etc/init.d&lt;/code> contains scripts used by the System V init tools (SysVinit). This is the traditional service management package for Linux, containing the init program (the first process that is run when the kernel has finished initializing¹) as well as some infrastructure to start and stop services and configure them. Specifically, files in /etc/init.d are shell scripts that respond to start, stop, restart, and (when supported) reload commands to manage a particular service. These scripts can be invoked directly or (most commonly) via some other trigger (typically the presence of a symbolic link in &lt;code>/etc/rc?.d/&lt;/code>).&lt;/p></description></item><item><title>Gdb多线程调试</title><link>https://caisong.github.io/posts/gdb%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%B0%83%E8%AF%95/</link><pubDate>Fri, 03 Sep 2021 20:51:41 +0800</pubDate><guid>https://caisong.github.io/posts/gdb%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%B0%83%E8%AF%95/</guid><description>&lt;ul>
&lt;li>&lt;code>info threads&lt;/code> 显示当前可调试的所有线程，每个线程会有一个GDB为其分配的ID，后面操作线程的时候会用到这个ID。 前面有*的是当前调试的线程。&lt;/li>
&lt;li>&lt;code>thread ID&lt;/code> 切换当前调试的线程为指定ID的线程。&lt;/li>
&lt;li>&lt;code>break thread_test.c:123 thread all&lt;/code> 在所有线程中相应的行上设置断点&lt;/li>
&lt;li>&lt;code>thread apply ID1 ID2 command&lt;/code> 让一个或者多个线程执行GDB命令command。&lt;/li>
&lt;li>&lt;code>thread apply all command&lt;/code> 让所有被调试线程执行GDB命令command。&lt;/li>
&lt;li>&lt;code>set scheduler-locking off|on|step&lt;/code> 估计是实际使用过多线程调试的人都可以发现，在使用step或者continue命令调试当前被调试线程的时候，其他线程也是同时执行的，怎么只让被调试程序执行呢？通过这个命令就可以实现这个需求。off 不锁定任何线程，也就是所有线程都执行，这是默认值。 on 只有当前被调试程序会执行。 step 在单步的时候，除了next过一个函数的情况(熟悉情况的人可能知道，这其实是一个设置断点然后continue的行为)以外，只有当前线程会执行。&lt;/li>
&lt;/ul></description></item><item><title>Checkpatch.pl</title><link>https://caisong.github.io/posts/checkpatch.pl/</link><pubDate>Fri, 03 Sep 2021 20:42:08 +0800</pubDate><guid>https://caisong.github.io/posts/checkpatch.pl/</guid><description>&lt;p>$ ./checkpatch.pl &amp;ndash;no-tree -f sample_module.c&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ignore file mode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global core.filemode false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global core.filemode false
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>git rebase -i xxxxxx&lt;/li>
&lt;li>change pick &amp;ndash;&amp;gt; edit&lt;/li>
&lt;li>git commit &amp;ndash;amend -s &amp;ndash;author &amp;quot; &amp;quot;&lt;/li>
&lt;li>git rebase &amp;ndash;continue&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#openssl cross compile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./Configure --openssldir&lt;span style="color:#f92672">=&lt;/span>/home/&amp;lt;your user&amp;gt;/workbench/openssl-1.0.1g/final shared os/compiler:arm-none-linux-gnueabi-
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Windows移植linux</title><link>https://caisong.github.io/posts/windows%E7%A7%BB%E6%A4%8Dlinux/</link><pubDate>Sun, 29 Oct 2017 20:13:54 +0800</pubDate><guid>https://caisong.github.io/posts/windows%E7%A7%BB%E6%A4%8Dlinux/</guid><description>&lt;p>Cut out summary from your post content here.&lt;/p></description></item><item><title>常用操作</title><link>https://caisong.github.io/posts/%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link><pubDate>Sat, 28 Oct 2017 20:09:06 +0800</pubDate><guid>https://caisong.github.io/posts/%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid><description>&lt;p>Cut out summary from your post content here.&lt;/p></description></item><item><title>Tpm Env</title><link>https://caisong.github.io/posts/tpm-env/</link><pubDate>Sun, 21 May 2017 17:44:32 +0800</pubDate><guid>https://caisong.github.io/posts/tpm-env/</guid><description>&lt;p>tpm使用相关命令&lt;/p></description></item><item><title>Change Partion Size</title><link>https://caisong.github.io/posts/change-partion-size/</link><pubDate>Thu, 18 May 2017 17:41:05 +0800</pubDate><guid>https://caisong.github.io/posts/change-partion-size/</guid><description>&lt;p>修改分区大小&lt;/p></description></item><item><title>Depmod</title><link>https://caisong.github.io/posts/depmod/</link><pubDate>Wed, 17 May 2017 17:38:47 +0800</pubDate><guid>https://caisong.github.io/posts/depmod/</guid><description>&lt;p>module命令&lt;/p></description></item><item><title>用户记录操作</title><link>https://caisong.github.io/posts/%E7%94%A8%E6%88%B7%E8%AE%B0%E5%BD%95%E6%93%8D%E4%BD%9C/</link><pubDate>Wed, 22 Mar 2017 17:34:14 +0800</pubDate><guid>https://caisong.github.io/posts/%E7%94%A8%E6%88%B7%E8%AE%B0%E5%BD%95%E6%93%8D%E4%BD%9C/</guid><description>&lt;p>使用&lt;code>crontab&lt;/code>记录用户操作日志&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Caisong's Blog</title><link>https://caisong.github.io/tags/docker/</link><description>Recent content in Docker on Caisong's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 09 Oct 2024 21:41:46 +0800</lastBuildDate><atom:link href="https://caisong.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>构建DPDK环境</title><link>https://caisong.github.io/posts/%E6%9E%84%E5%BB%BAdpdk%E7%8E%AF%E5%A2%83/</link><pubDate>Wed, 09 Oct 2024 21:41:46 +0800</pubDate><guid>https://caisong.github.io/posts/%E6%9E%84%E5%BB%BAdpdk%E7%8E%AF%E5%A2%83/</guid><description>&lt;p>构建DPDK环境 &lt;code>docker&lt;/code>镜像，未优化。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> ccr.ccs.tencentyun.com/library/centos:latest&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">LABEL&lt;/span> RUN docker run -it --privileged -v /sys/bus/pci/drivers:/sys/bus/pci/drivers -v /sys/kernel/mm/hugepages:/sys/kernel/mm/hugepages -v /sys/devices/system/node:/sys/devices/system/node -v /dev:/dev --name NAME -e NAME&lt;span style="color:#f92672">=&lt;/span>NAME -e IMAGE&lt;span style="color:#f92672">=&lt;/span>IMAGE IMAGE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> /root&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> ./dpdk-23.11.1.tar.xz ./libpcap-1.10.4.tar.xz dpdk-kmods-linux.tar.gz pktgen-dpdk-pktgen-24.05.5.tar.gz /root&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># repo&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> sed -e &lt;span style="color:#e6db74">&amp;#34;s|^mirrorlist=|#mirrorlist=|g&amp;#34;&lt;/span> -e &lt;span style="color:#e6db74">&amp;#34;s|^#baseurl=http://mirror.centos.org/\$contentdir/\$releasever|baseurl=http://mirror.nju.edu.cn/centos-vault/8.5.2111|g&amp;#34;&lt;/span> -i.bak /etc/yum.repos.d/CentOS-*.repo&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> dnf makecache &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> dnf install epel-release -y&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> sed -e &lt;span style="color:#e6db74">&amp;#39;s!^metalink=!#metalink=!g&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e &lt;span style="color:#e6db74">&amp;#39;s!^#baseurl=!baseurl=!g&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e &lt;span style="color:#e6db74">&amp;#39;s!https\?://download\.fedoraproject\.org/pub/epel!http://mirror.nju.edu.cn/epel!g&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e &lt;span style="color:#e6db74">&amp;#39;s!https\?://download\.example/pub/epel!http://mirror.nju.edu.cn/epel!g&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -i /etc/yum.repos.d/epel&lt;span style="color:#f92672">{&lt;/span>,-testing&lt;span style="color:#f92672">}&lt;/span>.repo &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> dnf makecache&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> dnf install python39 python39-pyelftools -y &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> python3 -m pip install -i https://mirrors.cernet.edu.cn/pypi/web/simple --upgrade pip &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> pip config set global.index-url https://mirrors.cernet.edu.cn/pypi/web/simple &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> pip install ninja meson&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> dnf install bison flex gcc make autoconf numactl-devel openssl openssl-devel libatomic-devel libatomic zlib-devel libbsd-devel which -y&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> tar xvf libpcap-1.10.4.tar.xz &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd libpcap-1.10.4 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ./configure &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make install&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> /root&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> tar xvf dpdk-23.11.1.tar.xz &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd dpdk-stable-23.11.1 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> meson build &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ninja -C build &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ninja -C build install &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> export PKG_CONFIG_PATH&lt;span style="color:#f92672">=&lt;/span>/usr/local/lib64/pkgconfig &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ldconfig&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> /root&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> tar xvf pktgen-dpdk-pktgen-24.05.5.tar.gz &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd pktgen-dpdk-pktgen-24.05.5 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> sed -i &lt;span style="color:#e6db74">&amp;#34;168s/%l&amp;#39;d/%d/&amp;#34;&lt;/span> app/pktgen-port-cfg.c &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> meson build &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ninja -C build &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ninja -C build install&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">CMD&lt;/span> [&lt;span style="color:#e6db74">&amp;#34; /sbin/init&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>docker 记录2</title><link>https://caisong.github.io/posts/docker-1/</link><pubDate>Thu, 08 Aug 2019 22:52:43 +0000</pubDate><guid>https://caisong.github.io/posts/docker-1/</guid><description>&lt;h2 id="以上为背景">上一年双十一购置了一台云服务器，就很少搭一些环境了。最近要搭建一套自动测试环境，公司内网缺少太多工具，就打算外网docker构建一套，再导入内网。
以上为背景。&lt;/h2>
&lt;h2 id="win7win10差别">win7/win10差别&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>win7 使用docker toolbox&lt;/strong>
&lt;strong>win10 使用Dcoker For Windows&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>国内用户可以选择阿里云hub加速器，说明很详细&lt;br>
偷个懒，直接贴图
&lt;img src="https://caisong.github.io/images/aliyun_hub.jpg" alt="aliyun_hub.jpg" title="阿里云hub加速">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="使用cmder作为终端">使用cmder作为终端&lt;/h2>
&lt;p>&lt;a href="https://goblincoding.com/2016/05/24/adding-docker-terminal-to-cmder-on-windows/" title="docker cmder">参考链接&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://goblincoding.files.wordpress.com/2016/05/setuptasks.gif?w=1100" alt="setuptasks.gif" title="一图胜千言">&lt;/p>
&lt;p>其实就是将docker工具创建的快捷方式中的命令拷贝到&lt;code>cmder&lt;/code>中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;D:\Program Files\Git\bin\bash.exe --login -i &amp;#34;&lt;/span>D:&lt;span style="color:#ae81ff">\P&lt;/span>rogram Files&lt;span style="color:#ae81ff">\D&lt;/span>ockerToolbox&lt;span style="color:#ae81ff">\s&lt;/span>tart.sh&lt;span style="color:#e6db74">&amp;#34; -new_console:d:&amp;#34;&lt;/span>D:&lt;span style="color:#ae81ff">\P&lt;/span>rogram Files&lt;span style="color:#ae81ff">\D&lt;/span>ockerToolbox&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>gdb problem inside docker container</title><link>https://caisong.github.io/posts/docker-gdb/</link><pubDate>Sun, 17 Dec 2017 20:53:59 +0000</pubDate><guid>https://caisong.github.io/posts/docker-gdb/</guid><description>&lt;blockquote>
 &lt;p>warning: Error disabling address space randomization: Operation not permitted&lt;/p>

 &lt;/blockquote>

&lt;ul>
&lt;li>
&lt;p>solutions:&lt;a href="https://stackoverflow.com/questions/35860527/warning-error-disabling-address-space-randomization-operation-not-permitted">stackoverflow&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run --cap-add&lt;span style="color:#f92672">=&lt;/span>SYS_PTRACE --security-opt seccomp&lt;span style="color:#f92672">=&lt;/span>unconfined
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>** There is no such options for &lt;code>docker exec&lt;/code> command, so I recreate a container. Maybe there are others ways, please let me know. Thanks **&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>docker install on windows</title><link>https://caisong.github.io/posts/docker/</link><pubDate>Sat, 28 Oct 2017 16:31:52 +0000</pubDate><guid>https://caisong.github.io/posts/docker/</guid><description>&lt;ol>
&lt;li>安装
阿里云下载&lt;a href="https://mirrors.aliyun.com/docker-toolbox/windows/docker-toolbox/">docker toolbox&lt;/a>&lt;/li>
&lt;li>常见问题&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>&lt;code>error: Details: code E_FAIL (0x80004005), component MachineWrap, interface I &lt;/code>
virtual box 版本较低导致，升级后问题解决
P.S. 另一由于CPU不支持虚拟化的导致的问题没遇到&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置国内镜像仓库&lt;/p>
&lt;ol>
&lt;li>创建之前指定&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-machine create --engine-registry-mirror&lt;span style="color:#f92672">=&lt;/span>http://hub-mirror.c.163.com -d virtualbox default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>创建之后，进入machine修改&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker-machine ssh &amp;lt;machine-name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo -i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;/^EXTRA_ARGS.*/ s/$/ ----registry-mirror=http://hub-mirror.c.163.com&amp;#39;&lt;/span> /var/lib/boot2docker/profile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/etc/init.d/docker restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>P.S. 默认docker用户，用&lt;code>sudo -i&lt;/code>切换root用户&lt;/p>
&lt;ul>
&lt;li>镜像路径
默认镜像路径在用户目录下，在C盘
&lt;ol>
&lt;li>安装前
设置环境变量&lt;code>MACHINE_STORAGE_PATH&lt;/code>指向你需要设置的目录&lt;/li>
&lt;li>安装后
P.S.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>创建快捷方式的方法失败&lt;/li>
&lt;li>指定docker daemon graph的方法失败&lt;/li>
&lt;li>未尝试使用&lt;code>ln&lt;/code>链接目录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>常用操作</title><link>https://caisong.github.io/posts/%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link><pubDate>Sat, 28 Oct 2017 20:09:06 +0800</pubDate><guid>https://caisong.github.io/posts/%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid><description>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>代理设置&lt;/li>
&lt;li>git 操作&lt;/li>
&lt;li>文件夹比较&lt;/li>
&lt;li>flash 分区&lt;/li>
&lt;li>阻止软件更新&lt;/li>
&lt;li>docker设置国内镜像&lt;/li>
&lt;li>linux语言环境设置&lt;/li>
&lt;/ul></description></item><item><title>docker permission</title><link>https://caisong.github.io/posts/docker-permission/</link><pubDate>Fri, 22 Sep 2017 22:34:59 +0000</pubDate><guid>https://caisong.github.io/posts/docker-permission/</guid><description>&lt;h1 id="docker-权限控制">docker 权限控制&lt;/h1>
&lt;p>docker在映射文件时，默认会使用与映射目录相同uid:gid，经常会导致一些权限问题。
常见有以下解决方案：&lt;/p>
&lt;ul>
&lt;li>改变权限&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>创建容器后，进入后&lt;code>chown&lt;/code>&lt;/li>
&lt;li>通过&lt;code>docker run&lt;/code>的&lt;code>-u&lt;/code>选项&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker run -v &lt;span style="color:#e6db74">`&lt;/span>pwd&lt;span style="color:#e6db74">`&lt;/span>/shared:/shared -u &lt;span style="color:#e6db74">`&lt;/span>stat -c &lt;span style="color:#e6db74">&amp;#34;%u:%g&amp;#34;&lt;/span> /shared&lt;span style="color:#e6db74">`&lt;/span> ubuntu bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样做的话就等于放弃了root权限，除非再新建root组用户&lt;/p>
&lt;ul>
&lt;li>使用Data-only container
[Data-only container madness](&lt;a href="http://container42.com/2014/11/18/data-only-container-madness/">http://container42.com/2014/11/18/data-only-container-madness/&lt;/a> “data-only”)
主要手段如下:&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>创建数据容器，改变目录用户权限。&lt;/li>
&lt;li>其他容器使用&lt;code>--volumes-from&lt;/code>挂载创建的数据容器&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker run -v /userdata --name data busybox true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run --volumes-from data debian:jessie bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>自平衡二搜索树——红黑树</title><link>https://caisong.github.io/posts/%E7%BA%A2%E9%BB%91%E6%A0%91/</link><pubDate>Mon, 04 Jul 2016 22:25:06 +0800</pubDate><guid>https://caisong.github.io/posts/%E7%BA%A2%E9%BB%91%E6%A0%91/</guid><description>&lt;p>红黑树主要属性&lt;/p>
&lt;ol>
&lt;li>所有节点要么红色，要么黑色&lt;/li>
&lt;li>叶子节点都是黑色&lt;/li>
&lt;li>叶子节点不包含数据&lt;/li>
&lt;li>所有非叶子节点都有两个子节点&lt;/li>
&lt;li>如果一个节点是红色，那么它的子节点都是黑色&lt;/li>
&lt;/ol>



 &lt;blockquote>
 &lt;p>一个红色节点不能是其他红色节点的子节点或者父节点&lt;/p>

 &lt;/blockquote>

&lt;ol start="6">
&lt;li>在一个节点到其叶子节点的路径中，如果总是包含相同数据的黑色节点，则该路径相比其他路径是最短的。&lt;/li>
&lt;/ol>



 &lt;blockquote>
 &lt;p>从树的任何节点到其叶子节点的路径都具有相同数目的黑色节点，树里的最长路径则是红黑交替节点路径，所以最短路径必然是具有相同数量的黑色节点——只包含黑色节点的路径。因此，从根节点到叶子节点的最长路径都不会超过最短路径的两倍&lt;/p>

 &lt;/blockquote></description></item></channel></rss>